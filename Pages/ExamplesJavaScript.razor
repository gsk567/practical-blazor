@page "/examples/javascript"
@inherits SlidePage
@inject IJSRuntime JS

<PageTitle>@GetBrandedTitle($"JavaScript | Examples |{Texts.Title}")</PageTitle>

<SlideContent HeaderTitle="JavaScript" HeaderSection="Examples">
     <div class="d-flex">
         <div class="d-flex m-auto">
             <div class="m-auto">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text">Snowflakes Count</span>
                    </div>
                    <input class="form-control" disabled="@isSnowInitialized" placeholder="Snowflakes count" @bind-value="snowflakeCount" />
                    <div class="input-group-append">
                        <button disabled="@isSnowInitialized" @onclick="LetItSnow" class="btn btn-primary">Let it snow</button>
                    </div>
                </div>
             </div>
         </div>
         <div class="d-flex m-auto">
             <div class="d-flex m-auto">
                 <SourceCodeRenderer SourceCodeKey="JavaScriptExample" Language="cshtml-razor"/>
             </div>
         </div>
     </div>
</SlideContent>


@code {
    private int snowflakeCount = 100;

    private IJSObjectReference module;

    private bool isSnowInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/PureSnow.js");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (this.module is not null)
        {
            await this.module.DisposeAsync();
        }
    }

    private async Task LetItSnow()
    {
        await this.module.InvokeVoidAsync("letItSnow", this.snowflakeCount);
        this.isSnowInitialized = true;
    }
}